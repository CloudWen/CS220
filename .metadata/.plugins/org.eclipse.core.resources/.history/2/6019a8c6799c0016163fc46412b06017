/*
 ============================================================================
 Name        : HW6b.c
 Author      : 
 Version     :
 Copyright   : Your copyright notice
 Description : Hello MPI World in C 
 ============================================================================
 */
#include <stdio.h>
#include <string.h>
#include "mpi.h"

void calculte_local_prefix_sum(int my_rank, int comm_sz, int* x_i);
int sum;

int main(int argc, char* argv[]){
	int  my_rank; /* rank of process */
	int  p;       /* number of processes */
	int source;   /* rank of sender */
	int dest;     /* rank of receiver */
	int tag=0;    /* tag for messages */
	char message[100];        /* storage for message */
	MPI_Status status ;   /* return status for receive */
	
	sum = 0;

	int input_array[10] = {1,2,3,4,5,6,7,8,9,10};
	int input_size = 10;

	int* prefix_sums = NULL;

	/* start up MPI */
	
	MPI_Init(&argc, &argv);
	
	/* find out process rank */
	MPI_Comm_rank(MPI_COMM_WORLD, &my_rank); 
	
	/* find out number of processes */
	MPI_Comm_size(MPI_COMM_WORLD, &p); 
	
	
	sum+= input_array[my_rank];
	int local_sum = sum;
	MPI_Bcast(sum, 1, MPI_INT, my_rank, MPI_COMM_WORLD);

	if (my_rank ==0){

		prefix_sums = malloc(input_size*sizeof(int));
		MPI_Gather(local_sum, 1, MPI_INT, prefix_sum, 1, MPI_INT, 0, MPI_COMM_WORLD)
		puts("After calculate: ");
		for (int i=0; i<input_size; i++){
			printf("%d,", prefix_sums[i]);
		}
		free(prefix_sums);

//		/* create message */
//		sprintf(message, "Hello MPI World from process %d!", my_rank);
//		dest = 0;
//		/* use strlen+1 so that '\0' get transmitted */
//		MPI_Send(message, strlen(message)+1, MPI_CHAR,
//		   dest, tag, MPI_COMM_WORLD);
	}
	else{


		MPI_Gather(local_sum, 1, MPI_INT, prefix_sum, 1, MPI_INT, 0, comm)

//		printf("Hello MPI World From process 0: Num processes: %d\n",p);
//		for (source = 1; source < p; source++) {
//			MPI_Recv(message, 100, MPI_CHAR, source, tag,
//			      MPI_COMM_WORLD, &status);
//			printf("%s\n",message);
		}
	}
	/* shut down MPI */
	MPI_Finalize(); 
	
	
	return 0;
}



void calculte_local_prefix_sum(int my_rank, int comm_sz, int* x_i, int array[]){

	sum += array[my_rank];
	MPI_Bcast(sum, 1, MPI_INT, my_rank, MPI_COMM_WORLD);

}
